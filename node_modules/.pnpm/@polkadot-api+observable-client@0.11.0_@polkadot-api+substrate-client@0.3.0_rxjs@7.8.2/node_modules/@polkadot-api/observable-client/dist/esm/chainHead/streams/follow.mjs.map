{"version":3,"file":"follow.mjs","sources":["../../../../src/chainHead/streams/follow.ts"],"sourcesContent":["import { BlockHeader, blockHeader } from \"@polkadot-api/substrate-bindings\"\nimport {\n  BestBlockChanged,\n  ChainHead,\n  Finalized,\n  FollowEventWithRuntime,\n  FollowResponse,\n  Initialized,\n  NewBlockWithRuntime,\n  StopError,\n} from \"@polkadot-api/substrate-client\"\nimport {\n  Observable,\n  ObservedValueOf,\n  Subscription,\n  connectable,\n  noop,\n} from \"rxjs\"\n\ntype EnhancedFollowEventWithRuntime =\n  | (Initialized & {\n      number: number\n      parentHash: string\n    })\n  | NewBlockWithRuntime\n  | BestBlockChanged\n  | Finalized\n\nconst withInitializedNumber =\n  (getHeader: (hash: string) => Promise<BlockHeader>) =>\n  (source$: Observable<FollowEventWithRuntime>) =>\n    new Observable<EnhancedFollowEventWithRuntime>((observer) => {\n      let pending: Array<EnhancedFollowEventWithRuntime> | null = null\n      return source$.subscribe({\n        next(event) {\n          if (event.type === \"initialized\") {\n            pending = []\n            getHeader(event.finalizedBlockHashes[0])\n              .then((header) => {\n                if (!observer.closed) {\n                  observer.next({\n                    ...event,\n                    number: header.number,\n                    parentHash: header.parentHash,\n                  })\n                  pending!.forEach((e) => {\n                    observer.next(e)\n                  })\n                  pending = null\n                }\n              })\n              .catch((e) => {\n                if (!observer.closed) observer.error(e)\n              })\n          } else if (pending) pending.push(event)\n          else observer.next(event)\n        },\n        error(e) {\n          observer.error(e)\n        },\n        complete() {\n          observer.complete()\n        },\n      })\n    })\n\nexport const getFollow$ = (chainHead: ChainHead) => {\n  let follower: FollowResponse | null = null\n  let unfollow: () => void = noop\n\n  const getFollower = () => {\n    if (!follower) throw new Error(\"Missing chainHead subscription\")\n    return follower\n  }\n\n  const getHeader = (hash: string) =>\n    getFollower().header(hash).then(blockHeader.dec)\n\n  const follow$ = connectable(\n    new Observable<FollowEventWithRuntime>((observer) => {\n      follower = chainHead(\n        true,\n        (e) => {\n          observer.next(e)\n        },\n        (e) => {\n          follower = null\n          observer.error(e)\n        },\n      )\n      unfollow = () => {\n        observer.complete()\n        follower?.unfollow()\n      }\n    }).pipe(withInitializedNumber(getHeader), retryChainHeadError()),\n  )\n\n  const startFollow = () => {\n    follow$.connect()\n    return () => {\n      unfollow()\n    }\n  }\n\n  return {\n    getHeader,\n    getFollower,\n    startFollow,\n    follow$,\n  }\n}\n\nconst retryChainHeadError =\n  <T extends { type: string }>() =>\n  (source$: Observable<T>) =>\n    new Observable<\n      | T\n      | {\n          type: \"stop-error\"\n        }\n    >((observer) => {\n      const subscription = new Subscription()\n      const subscribe = () =>\n        source$.subscribe({\n          next: (v) => observer.next(v),\n          error: (e) => {\n            subscription.add(subscribe())\n            if (e instanceof StopError) {\n              observer.next({ type: \"stop-error\" })\n            } else {\n              console.warn(\"ChainHead follow request failed, retryingâ€¦\", e)\n            }\n          },\n          complete: () => observer.complete(),\n        })\n      subscription.add(subscribe())\n      return subscription\n    })\n\nexport type FollowEvent =\n  | ObservedValueOf<ReturnType<ReturnType<typeof withInitializedNumber>>>\n  | { type: \"stop-error\" }\n"],"names":[],"mappings":"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"}