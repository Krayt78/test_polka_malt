import { atom } from "jotai";
import { startTransition } from "react";
export function atomWithPromise(getPromise) {
    const countAtom = atom(0);
    const promiseAtom = atom((get, { signal }) => {
        get(countAtom);
        const maybePromise = getPromise(get, { signal });
        const dataAtom = atom({
            value: maybePromise,
        });
        dataAtom.onMount = (update) => {
            if (maybePromise instanceof Promise) {
                void maybePromise
                    .then((value) => startTransition(() => update({ value })))
                    .catch((error) => startTransition(() => update({ error })));
            }
        };
        return dataAtom;
    });
    return atom((get) => {
        const data = get(get(promiseAtom));
        if ("error" in data) {
            throw data.error;
        }
        return data.value;
    }, (_, set) => {
        set(countAtom, (count) => count + 1);
    });
}
//# sourceMappingURL=atom-with-promise.js.map