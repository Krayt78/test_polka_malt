import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useLocalStore } from "../hooks/use-local-store.js";
import { useWalletsInitializer } from "../hooks/use-wallets-initializer.js";
import { ConfigContext } from "./config.js";
import { MutationEventSubjectContext } from "./mutation.js";
import { Provider as JotaiProvider } from "jotai";
import { Suspense, useEffect, useMemo } from "react";
import { Subject } from "rxjs";
/**
 * React context provider for ReactiveDOT.
 *
 * @group Contexts
 * @param props - Component props
 * @returns React element
 */
export function ReactiveDotProvider({ config, children, }) {
    return (_jsx(JotaiProvider, { store: useLocalStore(), children: _jsx(ConfigContext, { value: config, children: _jsxs(MutationEventSubjectContext, { value: useMemo(() => new Subject(), []), children: [_jsx(Suspense, { children: _jsx(WalletsInitializer, {}) }), children] }) }) }));
}
function WalletsInitializer() {
    const [_, initialize] = useWalletsInitializer();
    useEffect(() => {
        initialize();
    }, [initialize]);
    return null;
}
//# sourceMappingURL=provider.js.map