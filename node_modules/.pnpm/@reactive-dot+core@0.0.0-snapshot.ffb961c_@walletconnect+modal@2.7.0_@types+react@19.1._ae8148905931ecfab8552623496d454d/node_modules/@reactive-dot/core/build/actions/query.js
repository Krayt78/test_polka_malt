export function preflight(instruction) {
    switch (instruction.instruction) {
        case "fetch-constant":
        case "call-api":
        case "read-storage-entries":
            return "promise";
        case "read-storage":
            return "observable";
    }
}
export function query(api, instruction, options) {
    switch (instruction.instruction) {
        case "fetch-constant":
            return (
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            api.constants[instruction.pallet][instruction.constant]());
        case "call-api":
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            return api.apis[instruction.pallet][instruction.api](...instruction.args, { signal: options?.signal });
        case "read-storage":
            return (
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            api.query[instruction.pallet][instruction.storage].watchValue(...instruction.args));
        case "read-storage-entries":
            return (
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            api.query[instruction.pallet][instruction.storage].getEntries(...instruction.args, {
                signal: options?.signal,
            }));
    }
}
