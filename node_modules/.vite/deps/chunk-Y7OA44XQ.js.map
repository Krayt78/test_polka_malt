{
  "version": 3,
  "sources": ["../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/actions/aggregate-wallets.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/actions/connect-wallet.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/actions/disconnect-wallet.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/utils/native-token-info-from-chain-spec-data.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/utils/to-observable.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/actions/get-accounts.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/actions/get-block-extrinsics.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/actions/get-block.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/actions/get-client.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/actions/get-connected-wallets.ts", "../../.pnpm/@reactive-dot+core@0.40.4_polkadot-api@1.12.2_jiti@2.4.2_postcss@8.5.4_rxjs@7.8.2_/node_modules/@reactive-dot/core/src/actions/query.ts"],
  "sourcesContent": ["import { Wallet, type WalletProvider } from \"../wallets/index.js\";\n\nconst providerWallets = new WeakMap<\n  WalletProvider,\n  Promise<readonly Wallet[]>\n>();\n\nexport function aggregateWallets(\n  providersOrWallets: ReadonlyArray<Wallet | WalletProvider>,\n) {\n  return Promise.all(\n    providersOrWallets.map((walletOrProvider) =>\n      walletOrProvider instanceof Wallet\n        ? [walletOrProvider]\n        : (providerWallets.get(walletOrProvider) ??\n          providerWallets\n            .set(\n              walletOrProvider,\n              Promise.resolve(walletOrProvider.getWallets()),\n            )\n            .get(walletOrProvider)!),\n    ),\n  ).then((wallets) => wallets.flat());\n}\n", "import type { Wallet } from \"../wallets/wallet.js\";\n\nexport async function connectWallet(wallet: Wallet | Wallet[]) {\n  const walletsToConnect = Array.isArray(wallet) ? wallet : [wallet];\n\n  await Promise.all(walletsToConnect.map((wallet) => wallet.connect()));\n}\n", "import type { Wallet } from \"../wallets/wallet.js\";\n\nexport async function disconnectWallet(wallet: Wallet | Wallet[]) {\n  const walletsToDisconnect = Array.isArray(wallet) ? wallet : [wallet];\n\n  await Promise.all(walletsToDisconnect.map((wallet) => wallet.disconnect()));\n}\n", "import type { ChainSpecData } from \"@polkadot-api/substrate-client\";\n\nexport function nativeTokenInfoFromChainSpecData(chainSpecData: ChainSpecData) {\n  const symbol = chainSpecData.properties.tokenSymbol;\n  const decimals = chainSpecData.properties.tokenDecimals;\n\n  return {\n    code:\n      typeof symbol === \"string\"\n        ? symbol\n        : Array.isArray(symbol) && typeof symbol[0] === \"string\"\n          ? symbol[0]\n          : undefined,\n    decimals:\n      typeof decimals === \"number\"\n        ? decimals\n        : Array.isArray(decimals) && typeof decimals[0] === \"number\"\n          ? decimals[0]\n          : undefined,\n  };\n}\n", "import { from, isObservable, of, type Observable } from \"rxjs\";\n\nexport function toObservable<T>(value: T) {\n  type Value =\n    T extends Observable<infer _>\n      ? T\n      : T extends Promise<infer Value>\n        ? Observable<Value>\n        : Observable<T>;\n\n  if (isObservable(value)) {\n    return value as Value;\n  }\n\n  if (value instanceof Promise) {\n    return from(value) as Value;\n  }\n\n  return of(value) as Value;\n}\n", "import type { MaybeAsync } from \"../types.js\";\nimport { nativeTokenInfoFromChainSpecData } from \"../utils/native-token-info-from-chain-spec-data.js\";\nimport { toObservable } from \"../utils/to-observable.js\";\nimport type { WalletAccount } from \"../wallets/account.js\";\nimport type { Wallet } from \"../wallets/wallet.js\";\nimport type { ChainSpecData } from \"@polkadot-api/substrate-client\";\nimport { AccountId } from \"polkadot-api\";\nimport { combineLatest, of } from \"rxjs\";\nimport { map, switchMap } from \"rxjs/operators\";\n\nexport function getAccounts(\n  wallets: MaybeAsync<Wallet[]>,\n  chainSpec?: MaybeAsync<ChainSpecData>,\n) {\n  return combineLatest([toObservable(wallets), toObservable(chainSpec)]).pipe(\n    switchMap(([wallets, chainSpec]) => {\n      if (wallets.length === 0) {\n        return of([]);\n      }\n\n      const maybeSs58Format = chainSpec?.properties.ss58Format;\n\n      const ss58Format =\n        typeof maybeSs58Format === \"number\" ? maybeSs58Format : undefined;\n\n      const ss58AccountId = AccountId(ss58Format);\n\n      return combineLatest(\n        wallets.map((wallet) =>\n          wallet.accounts$.pipe(\n            map((accounts) =>\n              accounts\n                .map((account): WalletAccount | undefined => {\n                  const polkadotSigner = (() => {\n                    if (typeof account.polkadotSigner !== \"function\") {\n                      return account.polkadotSigner;\n                    }\n\n                    if (chainSpec === undefined) {\n                      return undefined;\n                    }\n\n                    const nativeTokenInfo =\n                      nativeTokenInfoFromChainSpecData(chainSpec);\n\n                    return account.polkadotSigner({\n                      tokenSymbol: nativeTokenInfo.code ?? \"\",\n                      tokenDecimals: nativeTokenInfo.decimals ?? 0,\n                    });\n                  })();\n\n                  if (polkadotSigner === undefined) {\n                    return undefined;\n                  }\n\n                  return {\n                    ...account,\n                    polkadotSigner,\n                    address: ss58AccountId.dec(polkadotSigner.publicKey),\n                    wallet,\n                  };\n                })\n                .filter((account) => account !== undefined),\n            ),\n          ),\n        ),\n      ).pipe(\n        map((accounts) => accounts.flat()),\n        map(\n          chainSpec === undefined\n            ? (accounts) => accounts\n            : (accounts) =>\n                accounts.filter(\n                  (account) =>\n                    !account.genesisHash ||\n                    chainSpec.genesisHash.includes(account.genesisHash),\n                ),\n        ),\n      );\n    }),\n  );\n}\n", "/* v8 ignore start */\nimport {\n  getDynamicBuilder,\n  getLookupFn,\n} from \"@polkadot-api/metadata-builders\";\nimport {\n  Bytes,\n  enhanceCodec,\n  metadata as metadataCodec,\n  Struct,\n  u8,\n  unifyMetadata,\n  type V15,\n} from \"@polkadot-api/substrate-bindings\";\nimport type {\n  Binary,\n  ChainDefinition,\n  Codec,\n  Enum,\n  FixedSizeBinary,\n  PolkadotClient,\n  SS58String,\n  TypedApi,\n} from \"polkadot-api\";\n\ntype MultiAddress = Enum<{\n  Id: SS58String;\n  Index: number | bigint;\n  Raw: Binary;\n  Address32: FixedSizeBinary<32>;\n  Address20: FixedSizeBinary<20>;\n}>;\n\ntype MultiSignature = Enum<{\n  Ed25519: FixedSizeBinary<64>;\n  Sr25519: FixedSizeBinary<64>;\n  Ecdsa: FixedSizeBinary<65>;\n}>;\n\ntype Extra = Partial<{\n  nonZeroSender: undefined;\n  specVersion: undefined;\n  txVersion: undefined;\n  genesis: undefined;\n  mortality: { type: `Mortal${string}`; value: number };\n  nonce: number;\n  weight: undefined;\n  transactionPayment: bigint;\n  metadataHash: Enum<{ Disabled: undefined; Enabled: undefined }>;\n  [key: string]: unknown;\n}>;\n\ntype Call = {\n  module: string;\n  func: string;\n  args: unknown;\n};\n\ntype Extrinsic = { version: number; call: Call } & (\n  | { signed: false }\n  | {\n      signed: true;\n      sender: MultiAddress;\n      signature: MultiSignature;\n      extra: Extra;\n    }\n);\n\nexport async function unstable_getBlockExtrinsics(\n  client: PolkadotClient,\n  typedApi: TypedApi<ChainDefinition>,\n  blockHash: string,\n) {\n  const v15MetadataBinary = await (\n    typedApi.apis[\"Metadata\"]![\"metadata_at_version\"]! as (\n      version: number,\n    ) => Promise<Binary | undefined>\n  )(15);\n\n  if (v15MetadataBinary === undefined) {\n    return;\n  }\n\n  const metadataResult = metadataCodec.dec(v15MetadataBinary.asBytes());\n\n  if (metadataResult.metadata.tag !== \"v15\") {\n    return;\n  }\n\n  const metadata = metadataResult.metadata.value;\n\n  const dynamicBuilder = await getOrCreateDynamicBuilder(client, metadata);\n\n  const version$ = enhanceCodec(\n    u8,\n    (value: { signed: boolean; version: number }) =>\n      (+!!value.signed << 7) | value.version,\n    (value) => ({\n      version: value & ~(1 << 7),\n      signed: !!(value & (1 << 7)),\n    }),\n  );\n\n  const address$ = dynamicBuilder.buildDefinition(\n    metadata.extrinsic.address,\n  ) as Codec<MultiAddress>;\n\n  const signature$ = dynamicBuilder.buildDefinition(\n    metadata.extrinsic.signature,\n  ) as Codec<MultiSignature>;\n\n  const rawExtra$ = dynamicBuilder.buildDefinition(\n    metadata.extrinsic.extra,\n  ) as Codec<unknown[]>;\n\n  const extra$ = enhanceCodec(\n    rawExtra$,\n    (extra: Extra) =>\n      metadata.extrinsic.signedExtensions.map(\n        (signedExtension) =>\n          extra[\n            \"Check\" +\n              signedExtension.identifier.slice(0, 1).toUpperCase() +\n              signedExtension.identifier.slice(1, 0)\n          ],\n      ),\n    (extra) =>\n      Object.fromEntries(\n        metadata.extrinsic.signedExtensions.map((signedExtension, index) => {\n          const name = signedExtension.identifier.replace(/^Check/, \"\");\n          return [\n            name.slice(0, 1).toLowerCase() + name.slice(1),\n            extra[index],\n          ] as const;\n        }),\n      ) as Extra,\n  );\n\n  const rawCall$ = dynamicBuilder.buildDefinition(\n    metadata.extrinsic.call,\n  ) as Codec<{ type: string; value: { type: string; value: unknown } }>;\n\n  const call$ = enhanceCodec(\n    rawCall$,\n    (call: Call) => ({\n      type: call.module,\n      value: { type: call.func, value: call.args },\n    }),\n    (call) => ({\n      module: call.type,\n      func: call.value.type,\n      args: call.value.value,\n    }),\n  );\n\n  const inherentExtrinsic$ = Struct({\n    version: version$ as Codec<{ version: number; signed: false }>,\n    body: Struct({ call: call$ }),\n  });\n\n  const signedExtrinsic$ = Struct({\n    version: version$ as Codec<{ version: number; signed: true }>,\n    body: Struct({\n      sender: address$,\n      signature: signature$,\n      extra: extra$,\n      call: call$,\n    }),\n  });\n\n  const simpleVersion$ = Struct({\n    version: version$,\n  });\n\n  const extrinsic$ = enhanceCodec(\n    Bytes(),\n    (extrinsic: Extrinsic) =>\n      extrinsic.signed\n        ? signedExtrinsic$.enc({\n            version: { version: extrinsic.version, signed: extrinsic.signed },\n            body: {\n              sender: extrinsic.sender,\n              signature: extrinsic.signature,\n              extra: extrinsic.extra,\n              call: extrinsic.call,\n            },\n          })\n        : inherentExtrinsic$.enc({\n            version: { version: extrinsic.version, signed: extrinsic.signed },\n            body: { call: extrinsic.call },\n          }),\n    (extrinsicBytes) => {\n      const {\n        version: { signed },\n      } = simpleVersion$.dec(extrinsicBytes);\n\n      const rawExtrinsic = (\n        signed ? signedExtrinsic$.dec : inherentExtrinsic$.dec\n      )(extrinsicBytes);\n\n      return { ...rawExtrinsic.version, ...rawExtrinsic.body } as Extrinsic;\n    },\n  );\n\n  const blockBody = await client.getBlockBody(blockHash);\n\n  return blockBody.map(extrinsic$.dec);\n}\n\nconst dynamicBuilders = new WeakMap<\n  PolkadotClient,\n  ReturnType<typeof getDynamicBuilder>\n>();\n\nasync function getOrCreateDynamicBuilder(\n  client: PolkadotClient,\n  metadata: V15,\n) {\n  if (dynamicBuilders.has(client)) {\n    return dynamicBuilders.get(client)!;\n  }\n\n  const lookup = getLookupFn(unifyMetadata(metadata));\n  const dynamicBuilder = getDynamicBuilder(lookup);\n\n  return dynamicBuilders.set(client, dynamicBuilder).get(client)!;\n}\n", "import type { PolkadotClient } from \"polkadot-api\";\nimport { map } from \"rxjs/operators\";\n\nexport type GetBlockOptions = {\n  tag?: \"best\" | \"finalized\";\n};\n\nexport function getBlock<TOptions extends GetBlockOptions>(\n  client: PolkadotClient,\n  options?: TOptions,\n) {\n  switch (options?.tag) {\n    case \"best\":\n      return client.bestBlocks$.pipe(map((blockInfos) => blockInfos.at(0)!));\n    case \"finalized\":\n    default:\n      return client.finalizedBlock$;\n  }\n}\n", "import type { ChainConfig } from \"../config.js\";\nimport {\n  createClientFromLightClientProvider,\n  isLightClientProvider,\n  type LightClientProvider,\n} from \"../providers/light-client/provider.js\";\nimport { createClient } from \"polkadot-api\";\nimport type { JsonRpcProvider } from \"polkadot-api/ws-provider/web\";\n\nexport async function getClient(chainConfig: ChainConfig) {\n  const providerOrGetter = await chainConfig.provider;\n\n  if (isLightClientProvider(providerOrGetter)) {\n    return createClientFromLightClientProvider(providerOrGetter);\n  }\n\n  // Hack to detect wether function is a `JsonRpcProvider` or a getter of `JsonRpcProvider`\n  const providerOrController = await (providerOrGetter.length > 0\n    ? (providerOrGetter as JsonRpcProvider | LightClientProvider)\n    : (\n        providerOrGetter as Exclude<\n          typeof providerOrGetter,\n          JsonRpcProvider | LightClientProvider\n        >\n      )());\n\n  if (isLightClientProvider(providerOrController)) {\n    return createClientFromLightClientProvider(providerOrController);\n  }\n\n  return createClient(providerOrController);\n}\n", "import type { MaybeAsync } from \"../types.js\";\nimport { toObservable } from \"../utils/to-observable.js\";\nimport type { Wallet } from \"../wallets/wallet.js\";\nimport { combineLatest, of } from \"rxjs\";\nimport { map, switchMap } from \"rxjs/operators\";\n\nexport function getConnectedWallets(wallets: MaybeAsync<Wallet[]>) {\n  return toObservable(wallets).pipe(\n    switchMap((wallets) => {\n      if (wallets.length === 0) {\n        return of([]);\n      }\n\n      return combineLatest(\n        wallets.map((wallet) =>\n          wallet.connected$.pipe(\n            map((connected) => [wallet, connected] as const),\n          ),\n        ),\n      );\n    }),\n    map((wallets) =>\n      wallets.filter(([_, connected]) => connected).map(([wallet]) => wallet),\n    ),\n  );\n}\n", "import type { CommonDescriptor } from \"../chains.js\";\nimport type {\n  InferInstructionResponse,\n  QueryInstruction,\n} from \"../query-builder.js\";\nimport type { ChainDefinition, TypedApi } from \"polkadot-api\";\nimport { map } from \"rxjs/operators\";\n\nexport function query<\n  TInstruction extends QueryInstruction,\n  TDescriptor extends ChainDefinition = CommonDescriptor,\n>(\n  api: TypedApi<TDescriptor>,\n  instruction: TInstruction,\n  options?: { signal?: AbortSignal },\n): InferInstructionResponse<TInstruction> {\n  switch (instruction.instruction) {\n    case \"get-constant\":\n      return (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (api.constants[instruction.pallet]![instruction.constant] as any)()\n      );\n    case \"call-api\":\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (api.apis[instruction.pallet]![instruction.api] as any)(\n        ...instruction.args,\n        { signal: options?.signal, at: instruction.at },\n      );\n    case \"read-storage\": {\n      const storageEntry = api.query[instruction.pallet]![\n        instruction.storage\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ] as any;\n\n      return instruction.at?.startsWith(\"0x\")\n        ? storageEntry.getValue(...instruction.args, { at: instruction.at })\n        : storageEntry.watchValue(\n            ...instruction.args,\n            ...[instruction.at].filter((x) => x !== undefined),\n          );\n    }\n    case \"read-storage-entries\":\n      return instruction.at?.startsWith(\"0x\")\n        ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (api.query[instruction.pallet]![instruction.storage] as any) // Comment to prevent formatting\n            .getEntries(...instruction.args, {\n              signal: options?.signal,\n              at: instruction.at,\n            })\n            .then((response: Array<{ keyArgs: unknown; value: unknown }>) =>\n              response.map(({ keyArgs, value }) =>\n                Object.assign([keyArgs, value], {\n                  /** @deprecated Use index access instead. */\n                  keyArgs,\n                  /** @deprecated Use index access instead. */\n                  value,\n                }),\n              ),\n            )\n        : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (api.query[instruction.pallet]![instruction.storage] as any) // Comment to prevent formatting\n            .watchEntries(...instruction.args, {\n              at: instruction.at,\n            })\n            .pipe(\n              map(\n                (response: {\n                  entries: Array<{ args: unknown; value: unknown }>;\n                }) =>\n                  response.entries.map(({ args, value }) =>\n                    Object.assign([args, value], {\n                      /** @deprecated Use index access instead. */\n                      keyArgs: args,\n                      /** @deprecated Use index access instead. */\n                      value,\n                    }),\n                  ),\n              ),\n            );\n  }\n}\n\nexport function preflight(instruction: QueryInstruction) {\n  if (\"at\" in instruction && instruction.at?.startsWith(\"0x\")) {\n    return \"promise\";\n  }\n\n  switch (instruction.instruction) {\n    case \"get-constant\":\n    case \"call-api\":\n      return \"promise\";\n    case \"read-storage-entries\":\n    case \"read-storage\":\n      return \"observable\";\n  }\n}\n"],
  "mappings": "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",
  "names": ["wallet", "wallet", "wallets", "chainSpec", "metadata", "wallets"]
}
